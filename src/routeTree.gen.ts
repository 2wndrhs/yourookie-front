/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as rootDImport } from './routes/__root.d'
import { Route as IndexLazyDImport } from './routes/index.lazy.d'
import { Route as AboutLazyDImport } from './routes/about.lazy.d'
import { Route as SignupIndexLazyDImport } from './routes/signup/index.lazy.d'
import { Route as MeetingRoomsIndexLazyDImport } from './routes/meetingRooms/index.lazy.d'
import { Route as OrganizationsOrganizationIdIndexLazyDImport } from './routes/organizations/$organizationId/index.lazy.d'
import { Route as SearchResultQueryIndexLazyDImport } from './routes/SearchResult/$query/index.lazy.d'
import { Route as ReservationSpaceIdIndexLazyDImport } from './routes/Reservation/$spaceId/index.lazy.d'
import { Route as OrganizationsOrganizationIdOpenIndexLazyDImport } from './routes/organizations/$organizationId/open/index.lazy.d'
import { Route as OrganizationsOrganizationIdEditIndexLazyDImport } from './routes/organizations/$organizationId/edit/index.lazy.d'
import { Route as ReservationSpaceIdStateIndexLazyDImport } from './routes/Reservation/$spaceId/state/index.lazy.d'
import { Route as OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyDImport } from './routes/organizations/$organizationId/spaceEdit/$spaceId/index.lazy.d'
import { Route as SearchResultQueryOrganizationsOrganizationIdIndexLazyDImport } from './routes/SearchResult/$query/organizations/$organizationId/index.lazy.d'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const SignupIndexLazyImport = createFileRoute('/signup/')()
const MeetingRoomsIndexLazyImport = createFileRoute('/meetingRooms/')()
const OrganizationsOrganizationIdIndexLazyImport = createFileRoute(
  '/organizations/$organizationId/',
)()
const SearchResultQueryIndexLazyImport = createFileRoute(
  '/SearchResult/$query/',
)()
const ReservationSpaceIdIndexLazyImport = createFileRoute(
  '/Reservation/$spaceId/',
)()
const OrganizationsOrganizationIdOpenIndexLazyImport = createFileRoute(
  '/organizations/$organizationId/open/',
)()
const OrganizationsOrganizationIdEditIndexLazyImport = createFileRoute(
  '/organizations/$organizationId/edit/',
)()
const ReservationSpaceIdStateIndexLazyImport = createFileRoute(
  '/Reservation/$spaceId/state/',
)()
const OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyImport =
  createFileRoute('/organizations/$organizationId/spaceEdit/$spaceId/')()
const SearchResultQueryOrganizationsOrganizationIdIndexLazyImport =
  createFileRoute('/SearchResult/$query/organizations/$organizationId/')()

// Create/Update Routes

const rootDRoute = rootDImport.update({
  id: '/__root/d',
  path: '/d',
  getParentRoute: () => rootRoute,
} as any)

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SignupIndexLazyRoute = SignupIndexLazyImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup/index.lazy').then((d) => d.Route))

const MeetingRoomsIndexLazyRoute = MeetingRoomsIndexLazyImport.update({
  id: '/meetingRooms/',
  path: '/meetingRooms/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/meetingRooms/index.lazy').then((d) => d.Route),
)

const OrganizationsOrganizationIdIndexLazyRoute =
  OrganizationsOrganizationIdIndexLazyImport.update({
    id: '/organizations/$organizationId/',
    path: '/organizations/$organizationId/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/organizations/$organizationId/index.lazy').then(
      (d) => d.Route,
    ),
  )

const SearchResultQueryIndexLazyRoute = SearchResultQueryIndexLazyImport.update(
  {
    id: '/SearchResult/$query/',
    path: '/SearchResult/$query/',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/SearchResult/$query/index.lazy').then((d) => d.Route),
)

const ReservationSpaceIdIndexLazyRoute =
  ReservationSpaceIdIndexLazyImport.update({
    id: '/Reservation/$spaceId/',
    path: '/Reservation/$spaceId/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/Reservation/$spaceId/index.lazy').then((d) => d.Route),
  )

const IndexLazyDRoute = IndexLazyDImport.update({
  id: '/index/lazy/d',
  path: '/index/lazy/d',
  getParentRoute: () => rootRoute,
} as any)

const AboutLazyDRoute = AboutLazyDImport.update({
  id: '/lazy/d',
  path: '/lazy/d',
  getParentRoute: () => AboutLazyRoute,
} as any)

const SignupIndexLazyDRoute = SignupIndexLazyDImport.update({
  id: '/signup/index/lazy/d',
  path: '/signup/index/lazy/d',
  getParentRoute: () => rootRoute,
} as any)

const MeetingRoomsIndexLazyDRoute = MeetingRoomsIndexLazyDImport.update({
  id: '/meetingRooms/index/lazy/d',
  path: '/meetingRooms/index/lazy/d',
  getParentRoute: () => rootRoute,
} as any)

const OrganizationsOrganizationIdOpenIndexLazyRoute =
  OrganizationsOrganizationIdOpenIndexLazyImport.update({
    id: '/organizations/$organizationId/open/',
    path: '/organizations/$organizationId/open/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/organizations/$organizationId/open/index.lazy').then(
      (d) => d.Route,
    ),
  )

const OrganizationsOrganizationIdEditIndexLazyRoute =
  OrganizationsOrganizationIdEditIndexLazyImport.update({
    id: '/organizations/$organizationId/edit/',
    path: '/organizations/$organizationId/edit/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/organizations/$organizationId/edit/index.lazy').then(
      (d) => d.Route,
    ),
  )

const ReservationSpaceIdStateIndexLazyRoute =
  ReservationSpaceIdStateIndexLazyImport.update({
    id: '/Reservation/$spaceId/state/',
    path: '/Reservation/$spaceId/state/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/Reservation/$spaceId/state/index.lazy').then(
      (d) => d.Route,
    ),
  )

const OrganizationsOrganizationIdIndexLazyDRoute =
  OrganizationsOrganizationIdIndexLazyDImport.update({
    id: '/organizations/$organizationId/index/lazy/d',
    path: '/organizations/$organizationId/index/lazy/d',
    getParentRoute: () => rootRoute,
  } as any)

const SearchResultQueryIndexLazyDRoute =
  SearchResultQueryIndexLazyDImport.update({
    id: '/SearchResult/$query/index/lazy/d',
    path: '/SearchResult/$query/index/lazy/d',
    getParentRoute: () => rootRoute,
  } as any)

const ReservationSpaceIdIndexLazyDRoute =
  ReservationSpaceIdIndexLazyDImport.update({
    id: '/Reservation/$spaceId/index/lazy/d',
    path: '/Reservation/$spaceId/index/lazy/d',
    getParentRoute: () => rootRoute,
  } as any)

const OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyRoute =
  OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyImport.update({
    id: '/organizations/$organizationId/spaceEdit/$spaceId/',
    path: '/organizations/$organizationId/spaceEdit/$spaceId/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/organizations/$organizationId/spaceEdit/$spaceId/index.lazy'
    ).then((d) => d.Route),
  )

const SearchResultQueryOrganizationsOrganizationIdIndexLazyRoute =
  SearchResultQueryOrganizationsOrganizationIdIndexLazyImport.update({
    id: '/SearchResult/$query/organizations/$organizationId/',
    path: '/SearchResult/$query/organizations/$organizationId/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/SearchResult/$query/organizations/$organizationId/index.lazy'
    ).then((d) => d.Route),
  )

const OrganizationsOrganizationIdOpenIndexLazyDRoute =
  OrganizationsOrganizationIdOpenIndexLazyDImport.update({
    id: '/organizations/$organizationId/open/index/lazy/d',
    path: '/organizations/$organizationId/open/index/lazy/d',
    getParentRoute: () => rootRoute,
  } as any)

const OrganizationsOrganizationIdEditIndexLazyDRoute =
  OrganizationsOrganizationIdEditIndexLazyDImport.update({
    id: '/organizations/$organizationId/edit/index/lazy/d',
    path: '/organizations/$organizationId/edit/index/lazy/d',
    getParentRoute: () => rootRoute,
  } as any)

const ReservationSpaceIdStateIndexLazyDRoute =
  ReservationSpaceIdStateIndexLazyDImport.update({
    id: '/Reservation/$spaceId/state/index/lazy/d',
    path: '/Reservation/$spaceId/state/index/lazy/d',
    getParentRoute: () => rootRoute,
  } as any)

const OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyDRoute =
  OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyDImport.update({
    id: '/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d',
    path: '/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d',
    getParentRoute: () => rootRoute,
  } as any)

const SearchResultQueryOrganizationsOrganizationIdIndexLazyDRoute =
  SearchResultQueryOrganizationsOrganizationIdIndexLazyDImport.update({
    id: '/SearchResult/$query/organizations/$organizationId/index/lazy/d',
    path: '/SearchResult/$query/organizations/$organizationId/index/lazy/d',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/__root/d': {
      id: '/__root/d'
      path: '/d'
      fullPath: '/d'
      preLoaderRoute: typeof rootDImport
      parentRoute: typeof rootRoute
    }
    '/meetingRooms/': {
      id: '/meetingRooms/'
      path: '/meetingRooms'
      fullPath: '/meetingRooms'
      preLoaderRoute: typeof MeetingRoomsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about/lazy/d': {
      id: '/about/lazy/d'
      path: '/lazy/d'
      fullPath: '/about/lazy/d'
      preLoaderRoute: typeof AboutLazyDImport
      parentRoute: typeof AboutLazyImport
    }
    '/index/lazy/d': {
      id: '/index/lazy/d'
      path: '/index/lazy/d'
      fullPath: '/index/lazy/d'
      preLoaderRoute: typeof IndexLazyDImport
      parentRoute: typeof rootRoute
    }
    '/Reservation/$spaceId/': {
      id: '/Reservation/$spaceId/'
      path: '/Reservation/$spaceId'
      fullPath: '/Reservation/$spaceId'
      preLoaderRoute: typeof ReservationSpaceIdIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/SearchResult/$query/': {
      id: '/SearchResult/$query/'
      path: '/SearchResult/$query'
      fullPath: '/SearchResult/$query'
      preLoaderRoute: typeof SearchResultQueryIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/organizations/$organizationId/': {
      id: '/organizations/$organizationId/'
      path: '/organizations/$organizationId'
      fullPath: '/organizations/$organizationId'
      preLoaderRoute: typeof OrganizationsOrganizationIdIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/Reservation/$spaceId/state/': {
      id: '/Reservation/$spaceId/state/'
      path: '/Reservation/$spaceId/state'
      fullPath: '/Reservation/$spaceId/state'
      preLoaderRoute: typeof ReservationSpaceIdStateIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/organizations/$organizationId/edit/': {
      id: '/organizations/$organizationId/edit/'
      path: '/organizations/$organizationId/edit'
      fullPath: '/organizations/$organizationId/edit'
      preLoaderRoute: typeof OrganizationsOrganizationIdEditIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/organizations/$organizationId/open/': {
      id: '/organizations/$organizationId/open/'
      path: '/organizations/$organizationId/open'
      fullPath: '/organizations/$organizationId/open'
      preLoaderRoute: typeof OrganizationsOrganizationIdOpenIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/meetingRooms/index/lazy/d': {
      id: '/meetingRooms/index/lazy/d'
      path: '/meetingRooms/index/lazy/d'
      fullPath: '/meetingRooms/index/lazy/d'
      preLoaderRoute: typeof MeetingRoomsIndexLazyDImport
      parentRoute: typeof rootRoute
    }
    '/signup/index/lazy/d': {
      id: '/signup/index/lazy/d'
      path: '/signup/index/lazy/d'
      fullPath: '/signup/index/lazy/d'
      preLoaderRoute: typeof SignupIndexLazyDImport
      parentRoute: typeof rootRoute
    }
    '/SearchResult/$query/organizations/$organizationId/': {
      id: '/SearchResult/$query/organizations/$organizationId/'
      path: '/SearchResult/$query/organizations/$organizationId'
      fullPath: '/SearchResult/$query/organizations/$organizationId'
      preLoaderRoute: typeof SearchResultQueryOrganizationsOrganizationIdIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/organizations/$organizationId/spaceEdit/$spaceId/': {
      id: '/organizations/$organizationId/spaceEdit/$spaceId/'
      path: '/organizations/$organizationId/spaceEdit/$spaceId'
      fullPath: '/organizations/$organizationId/spaceEdit/$spaceId'
      preLoaderRoute: typeof OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/Reservation/$spaceId/index/lazy/d': {
      id: '/Reservation/$spaceId/index/lazy/d'
      path: '/Reservation/$spaceId/index/lazy/d'
      fullPath: '/Reservation/$spaceId/index/lazy/d'
      preLoaderRoute: typeof ReservationSpaceIdIndexLazyDImport
      parentRoute: typeof rootRoute
    }
    '/SearchResult/$query/index/lazy/d': {
      id: '/SearchResult/$query/index/lazy/d'
      path: '/SearchResult/$query/index/lazy/d'
      fullPath: '/SearchResult/$query/index/lazy/d'
      preLoaderRoute: typeof SearchResultQueryIndexLazyDImport
      parentRoute: typeof rootRoute
    }
    '/organizations/$organizationId/index/lazy/d': {
      id: '/organizations/$organizationId/index/lazy/d'
      path: '/organizations/$organizationId/index/lazy/d'
      fullPath: '/organizations/$organizationId/index/lazy/d'
      preLoaderRoute: typeof OrganizationsOrganizationIdIndexLazyDImport
      parentRoute: typeof rootRoute
    }
    '/Reservation/$spaceId/state/index/lazy/d': {
      id: '/Reservation/$spaceId/state/index/lazy/d'
      path: '/Reservation/$spaceId/state/index/lazy/d'
      fullPath: '/Reservation/$spaceId/state/index/lazy/d'
      preLoaderRoute: typeof ReservationSpaceIdStateIndexLazyDImport
      parentRoute: typeof rootRoute
    }
    '/organizations/$organizationId/edit/index/lazy/d': {
      id: '/organizations/$organizationId/edit/index/lazy/d'
      path: '/organizations/$organizationId/edit/index/lazy/d'
      fullPath: '/organizations/$organizationId/edit/index/lazy/d'
      preLoaderRoute: typeof OrganizationsOrganizationIdEditIndexLazyDImport
      parentRoute: typeof rootRoute
    }
    '/organizations/$organizationId/open/index/lazy/d': {
      id: '/organizations/$organizationId/open/index/lazy/d'
      path: '/organizations/$organizationId/open/index/lazy/d'
      fullPath: '/organizations/$organizationId/open/index/lazy/d'
      preLoaderRoute: typeof OrganizationsOrganizationIdOpenIndexLazyDImport
      parentRoute: typeof rootRoute
    }
    '/SearchResult/$query/organizations/$organizationId/index/lazy/d': {
      id: '/SearchResult/$query/organizations/$organizationId/index/lazy/d'
      path: '/SearchResult/$query/organizations/$organizationId/index/lazy/d'
      fullPath: '/SearchResult/$query/organizations/$organizationId/index/lazy/d'
      preLoaderRoute: typeof SearchResultQueryOrganizationsOrganizationIdIndexLazyDImport
      parentRoute: typeof rootRoute
    }
    '/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d': {
      id: '/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d'
      path: '/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d'
      fullPath: '/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d'
      preLoaderRoute: typeof OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyDImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AboutLazyRouteChildren {
  AboutLazyDRoute: typeof AboutLazyDRoute
}

const AboutLazyRouteChildren: AboutLazyRouteChildren = {
  AboutLazyDRoute: AboutLazyDRoute,
}

const AboutLazyRouteWithChildren = AboutLazyRoute._addFileChildren(
  AboutLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRouteWithChildren
  '/d': typeof rootDRoute
  '/meetingRooms': typeof MeetingRoomsIndexLazyRoute
  '/signup': typeof SignupIndexLazyRoute
  '/about/lazy/d': typeof AboutLazyDRoute
  '/index/lazy/d': typeof IndexLazyDRoute
  '/Reservation/$spaceId': typeof ReservationSpaceIdIndexLazyRoute
  '/SearchResult/$query': typeof SearchResultQueryIndexLazyRoute
  '/organizations/$organizationId': typeof OrganizationsOrganizationIdIndexLazyRoute
  '/Reservation/$spaceId/state': typeof ReservationSpaceIdStateIndexLazyRoute
  '/organizations/$organizationId/edit': typeof OrganizationsOrganizationIdEditIndexLazyRoute
  '/organizations/$organizationId/open': typeof OrganizationsOrganizationIdOpenIndexLazyRoute
  '/meetingRooms/index/lazy/d': typeof MeetingRoomsIndexLazyDRoute
  '/signup/index/lazy/d': typeof SignupIndexLazyDRoute
  '/SearchResult/$query/organizations/$organizationId': typeof SearchResultQueryOrganizationsOrganizationIdIndexLazyRoute
  '/organizations/$organizationId/spaceEdit/$spaceId': typeof OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyRoute
  '/Reservation/$spaceId/index/lazy/d': typeof ReservationSpaceIdIndexLazyDRoute
  '/SearchResult/$query/index/lazy/d': typeof SearchResultQueryIndexLazyDRoute
  '/organizations/$organizationId/index/lazy/d': typeof OrganizationsOrganizationIdIndexLazyDRoute
  '/Reservation/$spaceId/state/index/lazy/d': typeof ReservationSpaceIdStateIndexLazyDRoute
  '/organizations/$organizationId/edit/index/lazy/d': typeof OrganizationsOrganizationIdEditIndexLazyDRoute
  '/organizations/$organizationId/open/index/lazy/d': typeof OrganizationsOrganizationIdOpenIndexLazyDRoute
  '/SearchResult/$query/organizations/$organizationId/index/lazy/d': typeof SearchResultQueryOrganizationsOrganizationIdIndexLazyDRoute
  '/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d': typeof OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyDRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRouteWithChildren
  '/d': typeof rootDRoute
  '/meetingRooms': typeof MeetingRoomsIndexLazyRoute
  '/signup': typeof SignupIndexLazyRoute
  '/about/lazy/d': typeof AboutLazyDRoute
  '/index/lazy/d': typeof IndexLazyDRoute
  '/Reservation/$spaceId': typeof ReservationSpaceIdIndexLazyRoute
  '/SearchResult/$query': typeof SearchResultQueryIndexLazyRoute
  '/organizations/$organizationId': typeof OrganizationsOrganizationIdIndexLazyRoute
  '/Reservation/$spaceId/state': typeof ReservationSpaceIdStateIndexLazyRoute
  '/organizations/$organizationId/edit': typeof OrganizationsOrganizationIdEditIndexLazyRoute
  '/organizations/$organizationId/open': typeof OrganizationsOrganizationIdOpenIndexLazyRoute
  '/meetingRooms/index/lazy/d': typeof MeetingRoomsIndexLazyDRoute
  '/signup/index/lazy/d': typeof SignupIndexLazyDRoute
  '/SearchResult/$query/organizations/$organizationId': typeof SearchResultQueryOrganizationsOrganizationIdIndexLazyRoute
  '/organizations/$organizationId/spaceEdit/$spaceId': typeof OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyRoute
  '/Reservation/$spaceId/index/lazy/d': typeof ReservationSpaceIdIndexLazyDRoute
  '/SearchResult/$query/index/lazy/d': typeof SearchResultQueryIndexLazyDRoute
  '/organizations/$organizationId/index/lazy/d': typeof OrganizationsOrganizationIdIndexLazyDRoute
  '/Reservation/$spaceId/state/index/lazy/d': typeof ReservationSpaceIdStateIndexLazyDRoute
  '/organizations/$organizationId/edit/index/lazy/d': typeof OrganizationsOrganizationIdEditIndexLazyDRoute
  '/organizations/$organizationId/open/index/lazy/d': typeof OrganizationsOrganizationIdOpenIndexLazyDRoute
  '/SearchResult/$query/organizations/$organizationId/index/lazy/d': typeof SearchResultQueryOrganizationsOrganizationIdIndexLazyDRoute
  '/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d': typeof OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyDRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRouteWithChildren
  '/__root/d': typeof rootDRoute
  '/meetingRooms/': typeof MeetingRoomsIndexLazyRoute
  '/signup/': typeof SignupIndexLazyRoute
  '/about/lazy/d': typeof AboutLazyDRoute
  '/index/lazy/d': typeof IndexLazyDRoute
  '/Reservation/$spaceId/': typeof ReservationSpaceIdIndexLazyRoute
  '/SearchResult/$query/': typeof SearchResultQueryIndexLazyRoute
  '/organizations/$organizationId/': typeof OrganizationsOrganizationIdIndexLazyRoute
  '/Reservation/$spaceId/state/': typeof ReservationSpaceIdStateIndexLazyRoute
  '/organizations/$organizationId/edit/': typeof OrganizationsOrganizationIdEditIndexLazyRoute
  '/organizations/$organizationId/open/': typeof OrganizationsOrganizationIdOpenIndexLazyRoute
  '/meetingRooms/index/lazy/d': typeof MeetingRoomsIndexLazyDRoute
  '/signup/index/lazy/d': typeof SignupIndexLazyDRoute
  '/SearchResult/$query/organizations/$organizationId/': typeof SearchResultQueryOrganizationsOrganizationIdIndexLazyRoute
  '/organizations/$organizationId/spaceEdit/$spaceId/': typeof OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyRoute
  '/Reservation/$spaceId/index/lazy/d': typeof ReservationSpaceIdIndexLazyDRoute
  '/SearchResult/$query/index/lazy/d': typeof SearchResultQueryIndexLazyDRoute
  '/organizations/$organizationId/index/lazy/d': typeof OrganizationsOrganizationIdIndexLazyDRoute
  '/Reservation/$spaceId/state/index/lazy/d': typeof ReservationSpaceIdStateIndexLazyDRoute
  '/organizations/$organizationId/edit/index/lazy/d': typeof OrganizationsOrganizationIdEditIndexLazyDRoute
  '/organizations/$organizationId/open/index/lazy/d': typeof OrganizationsOrganizationIdOpenIndexLazyDRoute
  '/SearchResult/$query/organizations/$organizationId/index/lazy/d': typeof SearchResultQueryOrganizationsOrganizationIdIndexLazyDRoute
  '/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d': typeof OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyDRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/d'
    | '/meetingRooms'
    | '/signup'
    | '/about/lazy/d'
    | '/index/lazy/d'
    | '/Reservation/$spaceId'
    | '/SearchResult/$query'
    | '/organizations/$organizationId'
    | '/Reservation/$spaceId/state'
    | '/organizations/$organizationId/edit'
    | '/organizations/$organizationId/open'
    | '/meetingRooms/index/lazy/d'
    | '/signup/index/lazy/d'
    | '/SearchResult/$query/organizations/$organizationId'
    | '/organizations/$organizationId/spaceEdit/$spaceId'
    | '/Reservation/$spaceId/index/lazy/d'
    | '/SearchResult/$query/index/lazy/d'
    | '/organizations/$organizationId/index/lazy/d'
    | '/Reservation/$spaceId/state/index/lazy/d'
    | '/organizations/$organizationId/edit/index/lazy/d'
    | '/organizations/$organizationId/open/index/lazy/d'
    | '/SearchResult/$query/organizations/$organizationId/index/lazy/d'
    | '/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/d'
    | '/meetingRooms'
    | '/signup'
    | '/about/lazy/d'
    | '/index/lazy/d'
    | '/Reservation/$spaceId'
    | '/SearchResult/$query'
    | '/organizations/$organizationId'
    | '/Reservation/$spaceId/state'
    | '/organizations/$organizationId/edit'
    | '/organizations/$organizationId/open'
    | '/meetingRooms/index/lazy/d'
    | '/signup/index/lazy/d'
    | '/SearchResult/$query/organizations/$organizationId'
    | '/organizations/$organizationId/spaceEdit/$spaceId'
    | '/Reservation/$spaceId/index/lazy/d'
    | '/SearchResult/$query/index/lazy/d'
    | '/organizations/$organizationId/index/lazy/d'
    | '/Reservation/$spaceId/state/index/lazy/d'
    | '/organizations/$organizationId/edit/index/lazy/d'
    | '/organizations/$organizationId/open/index/lazy/d'
    | '/SearchResult/$query/organizations/$organizationId/index/lazy/d'
    | '/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/__root/d'
    | '/meetingRooms/'
    | '/signup/'
    | '/about/lazy/d'
    | '/index/lazy/d'
    | '/Reservation/$spaceId/'
    | '/SearchResult/$query/'
    | '/organizations/$organizationId/'
    | '/Reservation/$spaceId/state/'
    | '/organizations/$organizationId/edit/'
    | '/organizations/$organizationId/open/'
    | '/meetingRooms/index/lazy/d'
    | '/signup/index/lazy/d'
    | '/SearchResult/$query/organizations/$organizationId/'
    | '/organizations/$organizationId/spaceEdit/$spaceId/'
    | '/Reservation/$spaceId/index/lazy/d'
    | '/SearchResult/$query/index/lazy/d'
    | '/organizations/$organizationId/index/lazy/d'
    | '/Reservation/$spaceId/state/index/lazy/d'
    | '/organizations/$organizationId/edit/index/lazy/d'
    | '/organizations/$organizationId/open/index/lazy/d'
    | '/SearchResult/$query/organizations/$organizationId/index/lazy/d'
    | '/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRouteWithChildren
  rootDRoute: typeof rootDRoute
  MeetingRoomsIndexLazyRoute: typeof MeetingRoomsIndexLazyRoute
  SignupIndexLazyRoute: typeof SignupIndexLazyRoute
  IndexLazyDRoute: typeof IndexLazyDRoute
  ReservationSpaceIdIndexLazyRoute: typeof ReservationSpaceIdIndexLazyRoute
  SearchResultQueryIndexLazyRoute: typeof SearchResultQueryIndexLazyRoute
  OrganizationsOrganizationIdIndexLazyRoute: typeof OrganizationsOrganizationIdIndexLazyRoute
  ReservationSpaceIdStateIndexLazyRoute: typeof ReservationSpaceIdStateIndexLazyRoute
  OrganizationsOrganizationIdEditIndexLazyRoute: typeof OrganizationsOrganizationIdEditIndexLazyRoute
  OrganizationsOrganizationIdOpenIndexLazyRoute: typeof OrganizationsOrganizationIdOpenIndexLazyRoute
  MeetingRoomsIndexLazyDRoute: typeof MeetingRoomsIndexLazyDRoute
  SignupIndexLazyDRoute: typeof SignupIndexLazyDRoute
  SearchResultQueryOrganizationsOrganizationIdIndexLazyRoute: typeof SearchResultQueryOrganizationsOrganizationIdIndexLazyRoute
  OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyRoute: typeof OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyRoute
  ReservationSpaceIdIndexLazyDRoute: typeof ReservationSpaceIdIndexLazyDRoute
  SearchResultQueryIndexLazyDRoute: typeof SearchResultQueryIndexLazyDRoute
  OrganizationsOrganizationIdIndexLazyDRoute: typeof OrganizationsOrganizationIdIndexLazyDRoute
  ReservationSpaceIdStateIndexLazyDRoute: typeof ReservationSpaceIdStateIndexLazyDRoute
  OrganizationsOrganizationIdEditIndexLazyDRoute: typeof OrganizationsOrganizationIdEditIndexLazyDRoute
  OrganizationsOrganizationIdOpenIndexLazyDRoute: typeof OrganizationsOrganizationIdOpenIndexLazyDRoute
  SearchResultQueryOrganizationsOrganizationIdIndexLazyDRoute: typeof SearchResultQueryOrganizationsOrganizationIdIndexLazyDRoute
  OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyDRoute: typeof OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyDRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRouteWithChildren,
  rootDRoute: rootDRoute,
  MeetingRoomsIndexLazyRoute: MeetingRoomsIndexLazyRoute,
  SignupIndexLazyRoute: SignupIndexLazyRoute,
  IndexLazyDRoute: IndexLazyDRoute,
  ReservationSpaceIdIndexLazyRoute: ReservationSpaceIdIndexLazyRoute,
  SearchResultQueryIndexLazyRoute: SearchResultQueryIndexLazyRoute,
  OrganizationsOrganizationIdIndexLazyRoute:
    OrganizationsOrganizationIdIndexLazyRoute,
  ReservationSpaceIdStateIndexLazyRoute: ReservationSpaceIdStateIndexLazyRoute,
  OrganizationsOrganizationIdEditIndexLazyRoute:
    OrganizationsOrganizationIdEditIndexLazyRoute,
  OrganizationsOrganizationIdOpenIndexLazyRoute:
    OrganizationsOrganizationIdOpenIndexLazyRoute,
  MeetingRoomsIndexLazyDRoute: MeetingRoomsIndexLazyDRoute,
  SignupIndexLazyDRoute: SignupIndexLazyDRoute,
  SearchResultQueryOrganizationsOrganizationIdIndexLazyRoute:
    SearchResultQueryOrganizationsOrganizationIdIndexLazyRoute,
  OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyRoute:
    OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyRoute,
  ReservationSpaceIdIndexLazyDRoute: ReservationSpaceIdIndexLazyDRoute,
  SearchResultQueryIndexLazyDRoute: SearchResultQueryIndexLazyDRoute,
  OrganizationsOrganizationIdIndexLazyDRoute:
    OrganizationsOrganizationIdIndexLazyDRoute,
  ReservationSpaceIdStateIndexLazyDRoute:
    ReservationSpaceIdStateIndexLazyDRoute,
  OrganizationsOrganizationIdEditIndexLazyDRoute:
    OrganizationsOrganizationIdEditIndexLazyDRoute,
  OrganizationsOrganizationIdOpenIndexLazyDRoute:
    OrganizationsOrganizationIdOpenIndexLazyDRoute,
  SearchResultQueryOrganizationsOrganizationIdIndexLazyDRoute:
    SearchResultQueryOrganizationsOrganizationIdIndexLazyDRoute,
  OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyDRoute:
    OrganizationsOrganizationIdSpaceEditSpaceIdIndexLazyDRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.js",
      "children": [
        "/",
        "/about",
        "/__root/d",
        "/meetingRooms/",
        "/signup/",
        "/index/lazy/d",
        "/Reservation/$spaceId/",
        "/SearchResult/$query/",
        "/organizations/$organizationId/",
        "/Reservation/$spaceId/state/",
        "/organizations/$organizationId/edit/",
        "/organizations/$organizationId/open/",
        "/meetingRooms/index/lazy/d",
        "/signup/index/lazy/d",
        "/SearchResult/$query/organizations/$organizationId/",
        "/organizations/$organizationId/spaceEdit/$spaceId/",
        "/Reservation/$spaceId/index/lazy/d",
        "/SearchResult/$query/index/lazy/d",
        "/organizations/$organizationId/index/lazy/d",
        "/Reservation/$spaceId/state/index/lazy/d",
        "/organizations/$organizationId/edit/index/lazy/d",
        "/organizations/$organizationId/open/index/lazy/d",
        "/SearchResult/$query/organizations/$organizationId/index/lazy/d",
        "/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d"
      ]
    },
    "/": {
      "filePath": "index.lazy.js"
    },
    "/about": {
      "filePath": "about.lazy.js",
      "children": [
        "/about/lazy/d"
      ]
    },
    "/__root/d": {
      "filePath": "__root.d.ts"
    },
    "/meetingRooms/": {
      "filePath": "meetingRooms/index.lazy.js"
    },
    "/signup/": {
      "filePath": "signup/index.lazy.js"
    },
    "/about/lazy/d": {
      "filePath": "about.lazy.d.ts",
      "parent": "/about"
    },
    "/index/lazy/d": {
      "filePath": "index.lazy.d.ts"
    },
    "/Reservation/$spaceId/": {
      "filePath": "Reservation/$spaceId/index.lazy.js"
    },
    "/SearchResult/$query/": {
      "filePath": "SearchResult/$query/index.lazy.js"
    },
    "/organizations/$organizationId/": {
      "filePath": "organizations/$organizationId/index.lazy.js"
    },
    "/Reservation/$spaceId/state/": {
      "filePath": "Reservation/$spaceId/state/index.lazy.js"
    },
    "/organizations/$organizationId/edit/": {
      "filePath": "organizations/$organizationId/edit/index.lazy.js"
    },
    "/organizations/$organizationId/open/": {
      "filePath": "organizations/$organizationId/open/index.lazy.js"
    },
    "/meetingRooms/index/lazy/d": {
      "filePath": "meetingRooms/index.lazy.d.ts"
    },
    "/signup/index/lazy/d": {
      "filePath": "signup/index.lazy.d.ts"
    },
    "/SearchResult/$query/organizations/$organizationId/": {
      "filePath": "SearchResult/$query/organizations/$organizationId/index.lazy.js"
    },
    "/organizations/$organizationId/spaceEdit/$spaceId/": {
      "filePath": "organizations/$organizationId/spaceEdit/$spaceId/index.lazy.js"
    },
    "/Reservation/$spaceId/index/lazy/d": {
      "filePath": "Reservation/$spaceId/index.lazy.d.ts"
    },
    "/SearchResult/$query/index/lazy/d": {
      "filePath": "SearchResult/$query/index.lazy.d.ts"
    },
    "/organizations/$organizationId/index/lazy/d": {
      "filePath": "organizations/$organizationId/index.lazy.d.ts"
    },
    "/Reservation/$spaceId/state/index/lazy/d": {
      "filePath": "Reservation/$spaceId/state/index.lazy.d.ts"
    },
    "/organizations/$organizationId/edit/index/lazy/d": {
      "filePath": "organizations/$organizationId/edit/index.lazy.d.ts"
    },
    "/organizations/$organizationId/open/index/lazy/d": {
      "filePath": "organizations/$organizationId/open/index.lazy.d.ts"
    },
    "/SearchResult/$query/organizations/$organizationId/index/lazy/d": {
      "filePath": "SearchResult/$query/organizations/$organizationId/index.lazy.d.ts"
    },
    "/organizations/$organizationId/spaceEdit/$spaceId/index/lazy/d": {
      "filePath": "organizations/$organizationId/spaceEdit/$spaceId/index.lazy.d.ts"
    }
  }
}
ROUTE_MANIFEST_END */
